byte counter;
void setup() {
  Serial.begin(9600);
  Serial.println("by holding the red button you need to get closest in seconds to this number");
  Serial.println("--> press green to start <--");
  pinMode(GreenLedPin,OUTPUT);
  digitalWrite(GreenLedPin,HIGH);
  pinMode(RedLedPin,OUTPUT);
  digitalWrite(RedLedPin,LOW);
  pinMode(GreenBtnPin,INPUT_PULLUP);
  pinMode(RedBtnPin,INPUT_PULLUP);
  randomSeed(analogRead(0));

}
unsigned long startPressTime;
unsigned long finishPressTime;
int pressedMSec;
void loop() 
{
  if(digitalRead(GreenBtnPin)==LOW){
    randNumber = random(1,6);
    Serial.println("try getting closest to the next number:");
    Serial.print(randNumber);
    Serial.println(" seconds");
    Serial.println("note: after you done clicking the button the resaults will display in milliseconds");
    Serial.println(" 1000 milliseconds = 1 second");
    Serial.println("-hold red to start-");
    delay(1000);
  }
  
  if(digitalRead(RedBtnPin)==LOW)
  {
    digitalWrite(RedLedPin,HIGH);
    Serial.println("start!");
    startPressTime=millis();
    while(digitalRead(RedBtnPin)==LOW);
    finishPressTime=millis();
    pressedMSec=finishPressTime-startPressTime;
    Serial.print("press took ");
    Serial.print(pressedMSec);
    Serial.println(" msec");
    if(randNumber == pressedMSec)
    {
      Serial.println("you got it right!");
      }
    if(pressedMSec - 200 < randNumber * 1000 && pressedMSec + 200 > randNumber * 1000)
    {
      Serial.println("good job!");
      }
    digitalWrite(RedLedPin,LOW);
    digitalWrite(RedLedPin,LOW);
    }
  }
